# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
name = "sentinel-core"
version = "0.1.2"
authors = ["Forsworns <378974295@qq.com>"]
exclude = ["/tests"]
description = "The flow sentinel of your microservices.\n"
homepage = "https://sentinelguard.io/en-us/"
documentation = "https://docs.rs/sentinel-core/latest"
readme = "README.md"
keywords = ["microservices", "flow-control", "sentinel", "reliability"]
categories = ["concurrency", "network-programming", "development-tools"]
license = "Apache-2.0"
repository = "https://github.com/sentinel-group/sentinel-rust"
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lib]
doctest = false

[[example]]
name = "hello_world"
path = "../examples/rules/flow/hello_world.rs"
required-features = ["full"]

[[example]]
name = "tokio"
path = "../examples/rules/flow/tokio.rs"
required-features = ["full", "async"]

[[example]]
name = "macro"
path = "../examples/rules/flow/macro.rs"
required-features = ["full"]

[[example]]
name = "memory_adaptive"
path = "../examples/rules/flow/memory_adaptive.rs"
required-features = ["full"]

[[example]]
name = "throttling"
path = "../examples/rules/flow/throttling.rs"
required-features = ["full"]

[[example]]
name = "method"
path = "../examples/rules/flow/method.rs"
required-features = ["full"]

[[example]]
name = "inbound_qps"
path = "../examples/rules/system/inbound_qps.rs"
required-features = ["full"]

[[example]]
name = "avg_rt"
path = "../examples/rules/system/avg_rt.rs"
required-features = ["full"]

[[example]]
name = "cpu_usage"
path = "../examples/rules/system/cpu_usage.rs"
required-features = ["full"]

[[example]]
name = "concurrency"
path = "../examples/rules/system/concurrency.rs"
required-features = ["full"]

[[example]]
name = "load"
path = "../examples/rules/system/load.rs"
required-features = ["full"]

[[example]]
name = "isolation"
path = "../examples/rules/isolation/concurrency.rs"
required-features = ["full"]

[[example]]
name = "error_count"
path = "../examples/rules/circuit_breaker/error_count.rs"
required-features = ["full"]

[[example]]
name = "error_ratio"
path = "../examples/rules/circuit_breaker/error_ratio.rs"
required-features = ["full"]

[[example]]
name = "slow_request"
path = "../examples/rules/circuit_breaker/slow_request.rs"
required-features = ["full"]

[[example]]
name = "hotspot_qps_reject"
path = "../examples/rules/hotspot/qps_reject.rs"
required-features = ["full"]

[[example]]
name = "hotspot_qps_throttling"
path = "../examples/rules/hotspot/qps_throttling.rs"
required-features = ["full"]

[[example]]
name = "hotspot_concurrency"
path = "../examples/rules/hotspot/concurrency.rs"
required-features = ["full"]

[[example]]
name = "config_yaml"
path = "../examples/config/from_yaml/from_yaml.rs"
required-features = ["full"]

[[example]]
name = "config_entity"
path = "../examples/config/from_entity/from_entity.rs"
required-features = ["full"]

[[example]]
name = "prometheus"
path = "../examples/exporter/prometheus/prometheus.rs"
required-features = ["full", "exporter"]

[[example]]
name = "etcdv3"
path = "../examples/datasources/etcdv3.rs"
required-features = ["full", "ds_etcdv3", "async"]

[[example]]
name = "consul"
path = "../examples/datasources/consul.rs"
required-features = ["full", "ds_consul", "async"]

[[example]]
name = "k8s"
path = "../examples/datasources/k8s.rs"
required-features = ["full", "ds_k8s", "async"]
[dependencies.anyhow]
version = "1.0.51"

[dependencies.base64]
version = "0.13"
optional = true

[dependencies.cfg-if]
version = "1.0.0"

[dependencies.consul]
version = "0.4"
optional = true

[dependencies.directories]
version = "4.0.1"
optional = true

[dependencies.enum-map]
version = "1.1.0"

[dependencies.env_logger]
version = "0.9.0"
optional = true

[dependencies.etcd-rs]
version = "0.6"
optional = true

[dependencies.futures]
version = "0.3.17"
optional = true

[dependencies.k8s-openapi]
version = "0.13.1"
features = ["v1_22"]
optional = true
default-features = false

[dependencies.kube]
version = "0.65"
features = ["derive", "runtime"]
optional = true

[dependencies.lazy_static]
version = "1.4.0"

[dependencies.log]
version = "0.4"

[dependencies.log4rs]
version = "1.0.0"
optional = true

[dependencies.lru]
version = "0.7.5"

[dependencies.prometheus_exporter]
version = "0.8.4"
optional = true

[dependencies.regex]
version = "1.5"
optional = true

[dependencies.schemars]
version = "0.8.8"
optional = true

[dependencies.sentinel-macros]
version = "0.1.0"
optional = true

[dependencies.serde]
version = "1.0.137"
features = ["derive"]

[dependencies.serde_json]
version = "1.0.80"

[dependencies.serde_yaml]
version = "0.8.23"

[dependencies.sysinfo]
version = "0.23.0"

[dependencies.time]
version = "0.3.5"
features = ["formatting", "macros"]
[dev-dependencies.mockall]
version = "0.11.0"

[dev-dependencies.rand]
version = "0.8.4"

[dev-dependencies.tokio]
version = "1"
features = ["full"]

[features]
async = []
default = []
ds_consul = ["consul", "base64"]
ds_etcdv3 = ["etcd-rs", "futures"]
ds_k8s = ["kube", "k8s-openapi", "schemars", "futures"]
exporter = ["prometheus_exporter"]
full = ["macros"]
logger_env = ["env_logger"]
logger_log4rs = ["log4rs"]
macros = ["sentinel-macros"]
metric_log = ["directories", "regex"]
proxy_envoy = ["proxy-wasm", "getrandom"]
[target."cfg(not(target_arch=\"wasm32\"))".dependencies.uuid]
version = "0.8"
features = ["serde", "v4"]
[target.wasm32-unknown-unknown.dependencies.getrandom]
version = "0.2"
features = ["js"]
optional = true

[target.wasm32-unknown-unknown.dependencies.proxy-wasm]
version = "0.1.4"
optional = true
